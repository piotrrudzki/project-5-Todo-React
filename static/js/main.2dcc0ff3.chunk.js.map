{"version":3,"sources":["components/Task.js","components/ListTasks.js","components/AddTask.js","components/App.js","index.js"],"names":["dateAdd","Date","toLocaleString","Task","props","task","id","priority","active","text","dateDone","style","color","onClick","done","delete","doneDate","ListTasks","activeTasks","list","filter","doneTasks","map","key","listDone","className","length","nowDate","toISOString","slice","AddTask","state","checked","handleInputChange","e","setState","target","value","handleClick","preventDefault","add","handleCheckboxChange","handleDate","maxDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","htmlFor","this","placeholder","type","onChange","defaultValue","min","max","Component","App","counter","handleDone","tasks","finishDate","getTime","forEach","handleDelete","console","log","index","findIndex","splice","addTask","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dcc0ff3.chunk.js","sourcesContent":["import React from \"react\";\r\nconst dateAdd = new Date().toLocaleString();\r\n\r\nconst Task = (props) => {\r\n  const { id, priority, active, text, dateDone } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <>\r\n        <li style={priority ? { color: \"red\" } : {}}>{text}</li>\r\n        <button onClick={() => props.done(id)}>Done</button>\r\n        <button onClick={() => props.delete(id)}>X</button>\r\n        <br />\r\n        <span>Add date : {dateAdd}</span>\r\n        <span>Finish date: {dateDone}</span>\r\n        <br />\r\n      </>\r\n    );\r\n  } else {\r\n    const doneDate = new Date(dateDone).toLocaleString();\r\n\r\n    return (\r\n      <>\r\n        <li>{text}</li>\r\n        <button onClick={() => props.delete(id)}>X</button>\r\n        <br />\r\n        <span>Done Date {doneDate}</span>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n};\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst ListTasks = (props) => {\r\n  const activeTasks = props.list.filter((task) => task.active);\r\n  const doneTasks = props.list.filter((task) => !task.active);\r\n\r\n  const list = activeTasks.map((list) => (\r\n    <Task key={list.id} task={list} done={props.done} delete={props.delete} />\r\n  ));\r\n  const listDone = doneTasks.map((list) => (\r\n    <Task key={list.id} task={list} done={props.done} delete={props.delete} />\r\n  ));\r\n  return (\r\n    <>\r\n      <div className=\"list\">\r\n        <h2>Tasks List</h2>\r\n        <ul>{list}</ul>\r\n      </div>\r\n      <div className=\"listDone\">\r\n        <h2>Done tasks ({doneTasks.length}) </h2>\r\n        <ul>{listDone}</ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListTasks;\r\n","import React, { Component } from \"react\";\r\nconst nowDate = new Date().toISOString().slice(0, 10);\r\nclass AddTask extends Component {\r\n  state = {\r\n    text: \"\",\r\n    dateAdd: nowDate,\r\n    dateDone: \"\",\r\n    checked: false,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    const { text, checked, dateAdd, dateDone } = this.state;\r\n    const add = this.props.add(text, checked, dateAdd, dateDone);\r\n    if (add) {\r\n      this.setState({\r\n        text: \"\",\r\n        dateAdd: nowDate,\r\n        dateDone: \"\",\r\n        checked: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCheckboxChange = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      dateDone: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let maxDate = new Date();\r\n\r\n    let dd = String(maxDate.getDate()).padStart(2, \"0\");\r\n    let mm = String(maxDate.getMonth() + 1).padStart(2, \"0\");\r\n    let yyyy = maxDate.getFullYear() + 5;\r\n\r\n    maxDate = yyyy + \"-\" + mm + \"-\" + dd;\r\n    return (\r\n      <div className=\"addTask\">\r\n        <h2>Add Tasks</h2>\r\n        <form>\r\n          <label htmlFor=\"task\">\r\n            <p>Your task</p>\r\n            <input\r\n              value={this.state.text}\r\n              placeholder=\"Type your task...\"\r\n              type=\"text\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <button onClick={this.handleClick}>Add</button>\r\n          </label>\r\n          <br />\r\n          <label htmlFor=\"priority\">\r\n            Priority\r\n            <input\r\n              id=\"priority\"\r\n              className=\"checkbox\"\r\n              type=\"checkbox\"\r\n              checked={this.state.checked}\r\n              onChange={this.handleCheckboxChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label htmlFor=\"date\">\r\n            Finish date\r\n            <br />\r\n            <input\r\n              id=\"date\"\r\n              type=\"date\"\r\n              onChange={this.handleDate}\r\n              defaultValue={nowDate}\r\n              min={nowDate}\r\n              max={maxDate}\r\n            />\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"../App.css\";\nimport ListTasks from \"./ListTasks\";\nimport AddTask from \"./AddTask\";\n\nclass App extends Component {\n  counter = 0;\n  state = {\n    list: [],\n  };\n\n  handleDone = (id) => {\n    const tasks = [...this.state.list];\n    const finishDate = new Date().getTime();\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.dateDone = finishDate;\n      }\n    });\n\n    this.setState({\n      list: tasks,\n    });\n  };\n  handleDelete = (id) => {\n    console.log(\"UsuniÄ™te o\" + id);\n    const tasks = [...this.state.list];\n    const index = tasks.findIndex((task) => task.id === id);\n    tasks.splice(index, 1);\n    this.setState({\n      list: tasks,\n    });\n  };\n\n  addTask = (text, priority, dateAdd, dateDone) => {\n    const task = {\n      id: this.counter,\n      text,\n      priority,\n      dateAdd,\n      dateDone,\n      active: true,\n    };\n    this.counter++;\n    this.setState((prevState) => ({\n      list: [...prevState.list, task],\n    }));\n\n    return true;\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <h1>TODO App</h1>\n          <AddTask add={this.addTask} />\n          <ListTasks\n            list={this.state.list}\n            done={this.handleDone}\n            delete={this.handleDelete}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}